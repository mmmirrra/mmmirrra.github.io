---
layout: post
title:  "C: Prepare to write C program and C Program Execution Example"
date:   2024-05-05 09:00:00 +0900
categories: [C]
---

### Step of development of usual program   
// 일반적인 프로그램 개발 단계   
   
// 1. 프로그램 목적 정의   
// - 요구 분석과 시스템 분석을 통하여 프로그램이 가져야 할 기능 정의   
// 2. 프로그램 설계   
// - 분석된 기능을 처리할 수 있도록 프로그램 구조를 설계   
// 3. 소스코드 작성   
// - 작성된 프로그램 설계를 기반으로 에디터를 사용하여 작성   
// 4. 컴파일/링크   
// - 소스코드를 실행 가능한 코드로 변환하고 문법 검사   
// 5. 프로그램 실행   
// - 프로그램 실행   
// 6. 테스트와 디버깅   
// - 에러를 검사하고 디버깅   
// 7. 유지보수   
// - 사용 중 발생되는 에러나 추가적인 변경사항을 처리   
1. Define program objectives   
    - Define what a program should have through needs analysis and system analysis   
2. Program Design   
    - Design a program structure to handle analyzed functions   
3. Create source code   
    - Create using an editor based on the created program design   
4. Compile/Link   
    - Convert source code to executable code and check grammar   
5. Run program   
    - Run program   
6. Testing and Debugging   
    - Check for errors and debug   
7. Maintenance   
    - Handling errors or additional changes that occur during use   
   
<br />
### Step of development of C program   
// C 프로그램 개발 단계   
   
#### Need editor and compiler   
// 에디터 (editor) 와 컴파일러 필요   
   
// 에디터 : 소스코드를 작성하여 저장할 수 있도록 도와주는 도구   
// C 컴파일러 : Turbo C/C++, Dev-C++, Visual C++, GCC, ...   
- Editor : A tool to help you create and store source code   
- C Compiler : Turbo C/C++, Dev-C++, Visual C++, GCC, ...   
   
#### The completion of the C program   
// C 프로그램의 완성 과정   
   
// 코딩 (coding) → 컴파일 (compile) → 링킹 (linking)   
- coding → compile → linking   
   
// 코딩 (coding) 단계   
// - 주어진 문제에 대한 설계를 바탕으로 소스코드 (source code) 를 작성하여 소스파일 (source file) 을 생성하는 과정   
// 컴파일 (compile) 단계   
// - 소스파일이 목적파일 (object file) 로 변환되는 과정   
// 링킹 (linking) 단계   
// - 목적파일을 실행파일 (execution file) 로 변환하는 과정   
- coding step   
  - The process of creating a source file by creating a source code based on the design for a given problem   
- compile step   
  - The process of converting a source file into an object file   
- linking step   
  - The process of converting a object file into an execution file   
   
#### coding step   
// 코딩 (coding) 단계   
   
// 소스파일의 생성   
- Creating a source file   
   
// 코딩 → .c 라는 확장자를 가진 파일로 저장 → 소스파일 (sample.c) 생성   
- Coding → Save as a file with an extension .c → Create source file (sample.c)   
   
#### compile step   
// 컴파일 (compile) 단계   
   
// 소스파일의 컴파일   
- Compiling a source file   
   
// 소스파일 (sample.c) → 컴파일러 → 목적파일 (sample.obj) 생성   
- source file (sample.c) → compiler → Create a object file (sample.obj)   
   
#### linking step   
// 링킹 (linking) 단계   
   
// 실행파일의 생성 (링킹 과정)   
- Creating an execution file (linking process)   
   
// 목적파일 (sample.obj) + 다른 목적파일/라이브러리 → 링커 → 실행파일 (sample.exe)   
- object file (sample.obj) + different object files/Libraries → Linker → execution file (sample.exe)   
   
<br />
### Example of the execution of a C program   
// C 프로그램의 실행 예시   
   
#### Dev-C++ Compiler   
// Dev-C++ 컴파일러   
   
// 소스코드 작성   
// - `파일(F) - 새로 만들기(N) - 소스 파일(S)`   
// 소스파일 생성   
// - `파일(F) - 저장(S)`   
// 컴파일 과정   
// - `실행(Z) - 컴파일(C)`   
// 실행결과   
// - `실행(Z) - 실행(R)`   
- Write source code   
  - `File (F) - New (N) - Source file (S)`   
- Creating a Source File   
  - `File (F) - Save (S)`   
- Compilation Process   
  - `Run (Z) - Compilation (C)`   
- Results of execution   
  - `Run (Z) - Run (R)`   
   
#### Visual Studio Compiler   
// Visual Studio 컴파일러   
   
// 1단계 : 작업공간 마련   
// - `새 프로젝트 만들기(N) - Windows 데스크톱 마법사 - 새 프로젝트 구성 (프로젝트 이름(N), 위치(L), 솔루션 이름(M)) - Windows 데스크톱 프로젝트 (애플리케이션 종류(T) - 콘솔 애플리케이션(.exe), 추가 옵션 - 빈 프로젝트)`   
// 2단계 : 소스파일 생성   
// - `솔루션 탐색기 - 소스 파일 에서 마우스 오른쪽 버튼 - 추가(D) - 새 항목(W) - C++ 파일(.cpp) 선택 - 이름(N), 위치(L) 작성 후 추가 버튼 선택`   
// 3단계 : 솔루션 빌드   
// - `빌드(B) - 솔루션 빌드(B)`   
// 4단계 : 실행파일 실행   
// - `디버그(D) - 디버그하지 않고 시작(H)`   
- Step 1 : Creating a workspace   
  - `Create New Project (N) - Windows Desktop Wizard - Configure New Project (Project Name (N), Location (L), Solution Name (M)) - Windows Desktop Project (Application Type (T) - Console Application (.exe), Additional Options - Empty Project)`   
- Step 2 : Create a Source File   
  - `Solution Explorer - Right-click on source file - Add (D) - New Item (W) - Select C++ File (.cpp) - Create Name (N), Location (L) and select Add button`   
- Step 3 : Build Solution   
  - `Build (B) - Solution Build (B)`   
- Step 4 : Execute execution file   
  - `Debug(D) - Start without debug(H)`   
   
<br />
<cite>출처 : 한국방송통신대학교 컴퓨터과학과</cite>
