---
layout: post
title:  "Introduction to Computer: Concept"
date:   2024-02-29 09:00:00 +0900
categories: [Computer]
---

### Data   
// 데이터 : 관찰이나 측정을 통해 얻은 수치, 문자 형태의 표현할 수 있는 질적(quality) 또는 양적(quantity) 값   
   
<br />
### Information   
// 정보 : 문제 또는 질문을 해결하기 위해 사용할 수 있는 데이터와 데이터의 집합   
   
<br />
### 정보 처리 과정   
현상 (관찰, 측정) -> 데이터 (처리, 가능) -> 정보   
- 데이터는 현상에 대한 관찰과 측정으로 생성   
- 데이터는 기록된 사실이지만, 직접적으로 문제를 해결하는데 도움이 되지 않음   
- 처리와 가공을 통해 정보로 변환   
   
#### 관찰, 측정   
- 관찰 : 사물 또는 현상을 파악하는 행위   
- 측정 : 절대적인 기준에 맞춰 현상을 수치로 나타내는 과정   
   
#### 처리와 가공   
수집된 데이터의 집합을 정렬, 군집화, 계산 또는 표현방법 변경 등의 데이터를 변환하여 정보를 생산하는 과정   
   
<br />
### 컴퓨터의 정의   
- 정의된 방법에 따라 입력된 데이터를 자동으로 처리하여 정보를 생산하는 기계   
- 두 가지의 상태값을 표현하는 기본 단위를 여러 개 중첩시켜 데이터를 표현 또는 처리   
   
#### 데이터의 기본 단위   
- 비트 bit : 두 개의 상태를 갖는 가장 작은 단위. 이진수 binary digit. 2가지 상태값 표현 가능. 0 ~ 1까지의 십진수 표현 가능   
- 바이트 byte : 8개의 bit. 256가지 상태값 표현 가능. 0 ~ 255까지의 십진수 표현 가능   
   
|비트 수|10진수로 변환 가능한 수|
|:---:|:---:|
|1|0 ~ 1|
|2|0 ~ 3|
|4|0 ~ 15|
|8|0 ~ 255|
   
#### 컴퓨터와 2진법   
- 컴퓨터는 트랜지스터를 통해 2진법 숫자로 데이터를 표현하여 저장 및 처리   
- 트랜지스터는 이미터(전류입력), 베이스(전류흐름/중단선택), 콜렉터(전류출력)로 구성   
   
#### 아날로그 analog 와 디지털 digital   
   
|아날로그 analog|디지털 digital|
|:---|:---|
|사물이나 개념을 연속적인 물리량 값으로 표현|사물이나 개념을 이산적인 값으로 근사하여 표현|
|질적 데이터 또는 양적 데이터로 표현|양적 데이터로 표현|
   
#### 숫자 데이터의 표현   
- 사람은 10진수, 12진수 등 여러 진수를 사용하지만 컴퓨터는 2진수만 사용하므로 진법 변환 필요   
   
#### 문자 데이터의 표현   
- 사람은 한글, 알파벳 등 여러 언어를 사용하지만 컴퓨터는 2진수만 사용하므로 인코딩 체계 필요   
   
#### 인코딩 체계 - ASCII 아스키코드   
- American Standard Code for Information Interchange : 어떤 코드를 통해 정보를 교환하기 위한 미국 표준   
- 출력 가능한 문자 총 95개 : 영문자 52개, 숫자 10개, 특수기호 32개, 공백문자 1개   
- 2진수의 비트열을 문자로 표현할 수 있음   
- 7비트를 이용하여 표현. 통신에러 등의 컨트롤을 위해 1bit를 사용   
- 아스키코드만으로 나라별 언어를 표현할 수 없음. 이를 해결한 코드가 유니코드임   
   
<br />
### 컴퓨터와 프로그램   
- 컴퓨터는 정보를 처리하기 위한 방법과 과정을 자의적으로 결정 불가능   
- 처리 방법과 과정이 정의된 프로그램을 사용   
   
#### 프로그램   
- 컴퓨터가 어떠한 작업을 자동으로 처리할 수 있도록 처리 방법 및 순서를 컴퓨터가 이해할 수 있는 언어 형태로 기술한 것   
- 유사한 유형의 여러 문제를 추상화시킨 알고리즘 algorithm 을 구현한 결과물   
   
#### 알고리즘   
- 문제를 풀기 위한 단계별 절차를 체계적 명령의 형태로 기술한 것   
- 주어진 명령어를 처리하는 컴퓨터에게 문제를 해결하도록 만드는 정형화된 절차   
   
#### 프로그래밍 언어   
- 사람과 컴퓨터 사이의 의사소통 도구   
- 프로그래머는 컴퓨터가 이해할 수 있는 언어를 사용하여 프로그램을 작성   
   
#### 프로그래밍 언어의 분류   
1세대 -> 2세대 -> 3세대 -> 4세대   
   
|세대|분류|언어|특징|
|:---:|:---:|:---|:---|
|1세대|저급언어|기계어|0과 1|
|2세대|저급언어|어셈블리어|명령어 영어 대체|
|3세대|고급언어|Python, C, Java, Rust, etc.|자연어와 유사|
|4세대|고급언어|Visual Basic, etc.|자동화|
   
저급언어는 기계에 가깝고, 고급언어는 사람에 가까움   
   
#### 프로그램의 실행   
- 고급 언어로 작성된 프로그램은 기계어 밖에 인식할 수 없는 컴퓨터에 의해 실행 불가능함   
- 컴파일러 또는 인터프리터를 사용하여 고급 언어를 기계어로 변환하여 실행   

   
<br />
<cite>출처 : 한국방송통신대학교 컴퓨터과학과</cite>
