---
layout: post
title:  "Introduction to Computer: Concept"
date:   2024-02-29 09:00:00 +0900
categories: [Computer]
---

### Data   
// 데이터 : 관찰이나 측정을 통해 얻은 수치, 문자 형태로 표현할 수 있는 질적(quality) 또는 양적(quantity) 값   
Numerical values obtained by Observation or Measurement, or a qualitative or quantitative value that can be expressed in characters   
   
<br />
### Information   
// 정보   
   
// 문제 또는 질문을 해결하기 위해 사용할 수 있는 데이터와 데이터의 집합   
// 관찰과 측정을 통해 얻은 데이터를 처리(정렬, 합산, 군집화 등)하여 실제 문제 해결에 도움이 되는 데이터 또는 결과물   
- A set of data and data that can be used to solve a problem or question   
- Data or deliverables that process data from observations and measurements (Alignment, Summation, Clustering, etc.) to help solve real-world problems   
   
<br />
### Information Processing Process   
// 정보 처리 과정 : 현상 (관찰, 측정) -> 데이터 (처리, 가공) -> 정보   
Phenomenon (Observation, Measurement) -> Data (Processing) -> Information   
   
// 데이터는 현상에 대한 관찰과 측정으로 생성   
// 데이터는 기록된 사실이지만, 직접적으로 문제를 해결하는데 도움이 되지 않음   
// 처리와 가공을 통해 정보로 변환   
- Data is generated by Observation and Measurement of the phenomenon   
- Data is a recorded fact, but it doesn't help solve the problem directly   
- Transforming into information through processing   
   
#### Observation, Measurement   
// 관찰 : 사물 또는 현상을 파악하는 행위   
// 측정 : 절대적인 기준에 맞춰 현상을 수치로 나타내는 과정   
- Observation : The act of grasping an object or a phenomenon   
- Measurement : The process of numerically representing a phenomenon according to an absolute criterion   
   
#### Processing   
// 처리와 가공 : 수집된 데이터의 집합을 정렬, 군집화, 계산 또는 표현방법 변경 등으로 데이터를 변환하여 정보를 생산하는 과정   
The process of generating information by converting data by sorting, clustering, calculating, changing expression method a set of collected data   
   
<br />
### Definition of a Computer   
// 컴퓨터의 정의   
   
// 정의된 방법에 따라 입력된 데이터를 자동으로 처리하여 정보를 생산하는 기계   
// 두 가지의 상태값을 표현하는 기본 단위를 여러 개 중첩시켜 데이터를 표현 또는 처리   
- A machine that produces information by automatically processing input data according to a defined method   
- Represent or process data by superimposing multiple basic units representing two state values   
   
#### Basic Unit of Data   
// 데이터의 기본 단위   
   
// 비트 : 두 개의 상태를 갖는 가장 작은 단위. 이진수. 2가지 상태값 표현 가능. 0 ~ 1까지의 십진수 표현 가능   
// 바이트 : 8개의 bit. 256가지 상태값 표현 가능. 0 ~ 255까지의 십진수 표현 가능   
- bit : The smallest unit with two states. Binary Digit. 2 state values can be expressed. Decimal from 0 to 1 can be represented   
- byte : 8 bits. 256 state values can be expressed. Decimal from 0 to 255 can be represented   
   
|// 비트 수<br />Number of bits|// 10진수로 변환 가능한 수<br />Number that can be converted from Binary to Decimal|
|:---:|:---:|
|1|Decimal 0 ~ 1|
|2|Decimal 0 ~ 3|
|4|Decimal 0 ~ 15|
|8|Decimal 0 ~ 255|
   
#### Computer and Binary   
// 컴퓨터와 2진법   
   
// 컴퓨터는 트랜지스터를 통해 2진법 숫자로 데이터를 표현하여 저장 및 처리   
// 트랜지스터는 이미터(전류입력), 베이스(전류흐름/중단선택), 콜렉터(전류출력)로 구성   
- The computer stores and processes data in binary numbers through the transistor   
- The transistor consists of an emitter (electrical input), a base (electrical flow/stop selection), and a collector (electrical output)   
   
#### Analog and Digital   
아날로그와 디지털   
   
|Analog|Digital|
|:---|:---|
|// 사물이나 개념을 연속적인 물리량 값으로 표현<br />Representation of an object or concept as a continuous physical quantity value|// 사물이나 개념을 이산적인 값으로 근사하여 표현<br />Representation of an object or concept by approximating it to a discrete value|
|// 질적 데이터 또는 양적 데이터로 표현<br />Represented as qualitative or quantitative data|// 양적 데이터로 표현<br />Represented as quantitative data|
   
#### Representation of Numeric Data   
// 숫자 데이터의 표현 : 사람은 10진수, 16진수 등 여러 진수를 사용하지만 컴퓨터는 2진수만 사용하므로 진법 변환 필요   
- People use many integers, such as decimal, hexadecimal, and so on, but computer only use binary digits, so a transformation of the binary is required   
   
#### Representation of Character Data   
// 문자 데이터의 표현 : 사람은 한글, 알파벳 등 여러 언어를 사용하지만 컴퓨터는 2진수만 사용하므로 인코딩 체계 필요   
- People speak many languages, such as Korean and alphabet, but computer only use binary digits, so an encoding system is needed   
   
#### Encoding system - ASCII   
// 인코딩 체계 - 아스키코드   
   
// 어떤 코드를 통해 정보를 교환하기 위한 미국 표준   
// 출력 가능한 문자 총 95개 : 영문자 52개, 숫자 10개, 특수기호 32개, 공백문자 1개   
// 2진수의 비트열을 문자로 표현할 수 있음   
// 7비트를 이용하여 표현. 통신에러 등의 컨트롤을 위해 1bit를 추가로 사용   
// 아스키코드만으로 나라별 언어를 표현할 수 없음. 이를 해결한 코드가 유니코드임   
- American Standard Code for Information Interchange   
- Total 95 characters that can be printed : 52 English characters, 10 numbers, 32 special symbols, 1 blank character   
- Binary bit strings can be represented as characters   
- Representation using 7 bits. Additional 1 bit is used for control of communication errors, etc   
- The language of each country cannot be expressed using ASCII alone. Unicode is the code that solved this problem   
   
<br />
### Computer and Program   
// 컴퓨터는 정보를 처리하기 위한 방법과 과정을 자의적으로 결정 불가능   
// 처리 방법과 과정이 정의된 프로그램을 사용   
- Computer is unable to arbitrarily determine the methods and processes for processing information   
- Use program with defined processing methods and processes   
   
#### Program   
// 컴퓨터가 어떠한 작업을 자동으로 처리할 수 있도록 처리 방법 및 순서를 컴퓨터가 이해할 수 있는 언어 형태로 기술한 것   
// 유사한 유형의 여러 문제를 추상화시킨 알고리즘 algorithm 을 구현한 결과물   
- Description of the processing method and order in a computer-understandable language form so that the computer can automatically process certain tasks   
- The result of implementing an algorithm that abstracts several similar types of problems   
   
#### Algorithm   
// 문제를 풀기 위한 단계별 절차를 체계적 명령의 형태로 기술한 것   
// 주어진 명령어를 처리하는 컴퓨터에게 문제를 해결하도록 만드는 정형화된 절차   
- A representation of the step-by-step process for solving a problem in the form of a systematic command   
- A formalized procedure for making a computer processing a given command solve a problem   
   
#### Programming Language   
// 사람과 컴퓨터 사이의 의사소통 도구   
// 프로그래머는 컴퓨터가 이해할 수 있는 언어를 사용하여 프로그램을 작성   
- Human-to-computer communication tools   
- Programmer write programs using language that computer can understand   
   
#### Classification of Programming Languages   
// 프로그래밍 언어의 분류 : 1세대 -> 2세대 -> 3세대 -> 4세대   
1st Generation -> 2nd Generation -> 3rd Generation -> 4th Generation   
   
|Generation|Classification|Languages|Description|
|:---:|:---:|:---|:---|
|1GL|Low-Level Language|// 기계어<br />Mechanical Language|// 0과 1<br />0 and 1|
|2GL|Low-Level Language|// 어셈블리어<br />Assembly Language|// 명령어 영어 대체<br />Replace the command with English|
|3GL|High-Level Language|Python, C, Java, Rust, etc.|// 자연어와 유사<br />Similar to Natural Language|
|4GL|High-Level Language|Visual Basic, etc.|// 자동화<br />Automation|
   
// 저급언어는 기계에 가깝고, 고급언어는 사람에 가까움   
Low-Level Language is close to machines, High-Level Language is close to humans   
   
#### Execution of a Program   
// 프로그램의 실행   
   
// 고급 언어로 작성된 프로그램은 기계어 밖에 인식할 수 없는 컴퓨터에 의해 실행 불가능함   
// 컴파일러 또는 인터프리터를 사용하여 고급 언어를 기계어로 변환하여 실행   
- Programs written in advanced languages cannot be executed by computer that can only recognize machine language   
- Use a compiler or interpreter to translate advanced languages into machine language   
   
<br />
<cite>출처 : 한국방송통신대학교 컴퓨터과학과</cite>
